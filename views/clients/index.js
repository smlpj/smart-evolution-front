import Head from "next/head";
import Image from "next/image";
import * as React from "react";
import { useFormik } from "formik";
import * as yup from "yup";
import { SignUpClient } from "./components";
import { useFetch } from "../../shared/hooks/useFetch";
import { login } from "./queries";

export default function RegisterClient() {
  // Hooks
  const {
    fetch: loginAux,
    loading: loginLoading,
    error: loginError,
    data: dataLogin,
  } = useFetch({ service: login, init: false });

  // Effects

  React.useEffect(() => {
    if (loginError) {
      alert();
    }

    if (dataLogin !== undefined) {
      console.log(dataLogin);
    }

    if (loginLoading) {
      console.log("loading");
    }
  }, [dataLogin, loginError, loginLoading]);

  const validationSchema = yup.object({
    document_number: yup
      .string("Ingresa un número de documento")
      .matches(/^[0-9]+$/, "Ingresa un número de documento válido")
      .required("El número de documento es requerido"),

    first_name: yup
      .string("Ingresa un nombre")
      .matches(/^[a-zA-Z]+$/, "Ingresa un nombre válido")
      .required("El nombre es requerido"),

    last_name: yup
      .string("Ingresa un apellido")
      .matches(/^[a-zA-Z]+$/, "Ingresa un apellido válido")
      .required("El apellido es requerido"),

    email: yup
      .string("Ingresa un email")
      .matches(
        /^[a-zA-Z]+[a-zA-Z0-9_.]+@[a-zA-Z.]+[a-zA-Z]$/,
        "Ingresa un email válido"
      )
      .required("El email es requerido"),

    phone_number: yup
      .string("Ingresa un número de teléfono")
      .matches(/^[0-9]+$/, "Ingresa un número de teléfono válido")
      .required("El número de teléfono es requerido"),
  });

  const formik = useFormik({
    initialValues: {
      type_identity: "",
      document_number: "",
      first_name: "",
      last_name: "",
      address: "",
      email: "",
      phone_number: "",
      city: "",
    },
    validationSchema: validationSchema,
    onSubmit: (values) => {
      loginAux(values);
    },
  });

  return (
    <>
      <Head>
        <title>Registro de corredores</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/assets/Icono Smart.svg" />
      </Head>
      <SignUpClient formik={formik} />
    </>
  );
}
